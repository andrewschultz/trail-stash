:: StoryTitle
Trail Stash

:: StoryData
{
  "ifid": "0570A44F-5C6D-4A2A-9482-40658C61E3A9",
  "format": "SugarCube",
  "format-version": "2.30.0",
  "start": "Funny Mound"
}

:: Garbage / Backup Code

:: StoryInit

/% todo (for testing): condense SOLVETHIS if-statements (rm4-7) into a widget %/
/% Hizzy Bub is place, Bed Hangars too, Bay Hut %/

<<set $roomInfo to {}>>
<<set $itemInfo to {}>>

<<set $roomInfo['Funny Mound'] to {
  exits: [ ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'] ],
  available: true,
  solved: false,
  solvedname: 'Money Found'
  }
>>
<<set $roomInfo['Small Isles'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Ganging Hate'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Rusty Fiddlers'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>

<<set $hardmode=false>>

:: Story Widgets [widget nobr]
<<widget "thispassage">>
<<=passage()>>
<</widget>>

<<widget "solvethis">>
<<set $roomInfo[passage()].solved = true>>
<</widget>>

<<widget "showlinks">>
  <center>
  <<set _y=passage()>>
  <<for _i = 0; _i < $roomInfo[_y].exits.length; _i++>>
	<<if _i > 0>> | <</if>>
    <<set _this = $roomInfo[_y].exits[_i]>>
	<<if $roomInfo[_this[0]].solved == true>>
	  (_this[2])
	<<else>>
	  [[_this[1]|_this[0]]]
	<</if>>
  <</for>>
  </center>
<</widget>>

<<widget "roomto">>
  <<set _in=passage()>>
  <<set _my_array = $roomInfo[_in].exits[$args[0]]>>
  <<set _out = _my_array[0]>>
  <<set $traversed = [ _in ]>>
  <<set $toTraverse = [ _out ]>>
  <<set $canTraverse = true>>
  <<set $foundUnsolved = false>>
  <<for _i = 0; (_i < 25) and ($canTraverse) and (not $foundUnsolved) and (not $hardmode); _i++>>
    <<set $canTraverse = false>>
    <<for _j = 0; (_j < $toTraverse.length) and (not $foundUnsolved); _j++>>
	  <<if $roomInfo[$toTraverse[_j]].solved == false >>
	    <<set $foundUnsolved = true>>
	  <<else>>
	    <<for _k = 0; _k < $roomInfo[$toTraverse[_j]].exits.length; _k++>>
		  <<set _this = $roomInfo[$toTraverse[_j]].exits[_k][0]>>
		  <<if not $traversed.includes(_this) and not $toTraverse.includes(_this)>>
		    <<run $toTraverse.push(_this)>>
	      <</if>>
	    <</for>>
	  <</if>>
	<</for>>
  <</for>>
  <<if $foundUnsolved or $hardmode>>
	  [[_my_array[1]|_my_array[0]]]
	<<else>>
	  <font color=green>(_my_array[2])</font>
  <</if>>
<</widget>>

<<widget "solvesearch">>
  <center>
  <<if def $roomInfo[_y]>>
    <<set _y=passage()>>
    <<for _a = 0; _a < $roomInfo[_y].exits.length; _a++>>
      <<if _a > 0>>|<</if>>
      <<roomto _a>>
    <</for>>
  <<elseif _y == "Inventory">>
    [[As you were|$oldpsg]]
  <<else>>
  <font color=green>(likely dead end/death trap--just undo in the left column!)</font>
  <</if>>
  </center>
<</widget>>

:: StoryMenu [StoryMenu]

<<set $hm to 'Hard mode, click for easy'>>
<<if $hardmode == false>><<set $hm to 'Easy mode, click for hard'>><</if>>

<<set _labels to ['Easy mode, click for hard', 'Hard mode, click for easy']>>
<<set _hm to _labels[Number($hardmode)]>>

<<link "<span id='dif'>_hm</span>">>
	<<set $hardmode to not $hardmode>>
    <<set _hm to _labels[Number($hardmode)]>>
	<<replace "#dif">>_hm<</replace>>
<</link>>

<<set $oldpsg=passage()>>

[[Inventory]]

::Inventory

:: PassageFooter

<<solvesearch>>

:: PassageHeader

<center><<nobr>><font size=+2 color=yellow><<set _y=passage()>><<if def $roomInfo[_y] and def $roomInfo[_y].solvedname and $roomInfo[_y].solved is true>><<print $roomInfo[_y].solvedname>><<else>>_y<</if>></font><</nobr>></center>

:: Funny Mound

<<if $roomInfo["Funny Mound"].solved == false>>There's a funny mound here that seems to be covering passage elsewhere.<<else>>With money found here, passages expanded.<</if>>

A blob rind lies here! You may be able to figure out what it's doing, or it might do, so you'll know whether or not you want to [[inspect it|RobBlind]].

:: Small Isles

:: Ganging Hate

:: Rusty Fiddlers

:: Rm1

:: Rm2

:: Rm3

:: Rm4

<<if $roomInfo["Rm4"].solved == false>><<link [[Solve this|Rm4]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: Rm5

<<if $roomInfo["Rm5"].solved == false>><<link [[Solve this|Rm5]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: Bed Hangars

<<if $roomInfo["Bed Hangars"].solved == false>><<link [[Solve this|Bed Hangars]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: Rm7

<<if $roomInfo["Rm7"].solved == false>><<link [[Solve this|Rm7]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: Blighter's Rock

<<if $roomInfo["Blighter's Rock"].solved == false>><<link [[Solve this|Blighter's Rock]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: RobBlind

Unsurprisingly, the blob rind swells up to several times its original side in order to, uh, rob you blind. It only enveloped your belongings, not you, but you're so embarrassed by the experience, you give up. Or, you know, you can undo.
