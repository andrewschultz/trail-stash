:: StoryTitle
Trail Stash

:: StoryData
{
  "ifid": "0570A44F-5C6D-4A2A-9482-40658C61E3A9",
  "format": "SugarCube",
  "format-version": "2.30.0",
  "start": "Ganging Hate"
}

:: Garbage / Backup Code

:: StoryInit

/% todo (for testing): condense SOLVETHIS if-statements (rm4-7) into a widget %/
/% Hizzy Bub is place, Bed Hangars too, Bay Hut %/

<<set $roomInfo to {}>>
<<set $itemInfo to {}>>
<<set $inventory to []>>
<<set $oldpsg to "">>

<<set $roomInfo['Funny Mound'] to {
  exits: [ ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'], ['Wash Pit', 'to a wash pit', '(fixed the wash pit)'], ['Weedy Nerds', 'to some weedy nerds', '(fixed the weedy nerds)'], ['Feeling Diner', 'to the feeling diner', '(fixed the Feeling Diner)'], ],
  available: true,
  solved: false,
  solvedname: 'Money Found'
  }
>>
<<set $roomInfo['Small Isles'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Ganging Hate'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Rusty Fiddlers', 'by some rusty fiddlers', '(appeased the rusty fiddlers)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Rusty Fiddlers'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Wash Pit'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Posh Wit"
  }
>>
<<set $roomInfo['Weedy Nerds'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Needy Words"
  }
>>
<<set $roomInfo['Feeling Diner'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Dealing Finer"
  }
>>

<<set $itemInfo['Pert Door'] to {
  initroom: 'Ganging Hate',
  useroom: 'Funny Mound',
  taken: false,
  used: false,
  description: "A pert door stands here on its own. Odd!",
  success: "You place the pert door down. Somehow, it sinks into the Funny Mound, lowering it. You now have passage through.",
  reveals: [ "Wash Pit", "Weedy Nerds", "Feeling Diner" ]
}
>>

<<set $itemInfo['Hair Shirt'] to {
  initroom: 'Funny Mound',
  useroom: 'Small Isles',
  taken: false,
  used: false,
  description: "A hair shirt lies here, disused and unloved. Odd!",
  success: "You share hurt in your hair shirt. People realize they are not alone. It makes everyone happy.",
  reveals: [ "Drunk Shower", "Harming Fights", "Feast Lake" ]
}
>>

<<set $itemInfo['Hard Candy'] to {
  initroom: 'Rusty Fiddlers',
  useroom: 'Ganging Hate',
  taken: false,
  used: false,
  description: "Some hard candy is here, still in its wrapper.",
  success: "There's nothing like candy to dispel ganging hate! Even if it is not very good candy! As the ganging hate subsides, you notice other passages through.",
  reveals: [ "Peer Class", "Blighters Rock", "Brainy Zoo" ]
}
>>

<<set $itemInfo['Booze Cluster'] to {
  initroom: 'Small Isles',
  useroom: 'Rusty Fiddlers',
  taken: false,
  used: false,
  description: "Some hard candy is here, still in its wrapper.",
  success: "There's nothing like candy to dispel ganging hate! Even if it is not very good candy! As the ganging hate subsides, you notice other passages through.",
  reveals: [ "Peer Class", "Blighters Rock", "Brainy Zoo" ]
}
>>

<<set $hardmode=false>>

:: Story Widgets [widget nobr]
<<widget "thispassage">>
<<=passage()>>
<</widget>>

<<widget "solvethis">>
<<set $roomInfo[passage()].solved = true>>
<</widget>>

<<widget "roomto">>
  <<set _in=passage()>>
  <<set _my_array = $roomInfo[_in].exits[$args[0]]>>
  <<set _out = _my_array[0]>>
  <<set $traversed = [ _in ]>>
  <<set $toTraverse = [ _out ]>>
  <<set $canTraverse = true>>
  <<set $foundUnsolved = false>>
  <<for _i = 0; (_i < 25) and ($canTraverse) and (not $foundUnsolved) and (not $hardmode); _i++>>
    <<set $canTraverse = false>>
    <<for _j = 0; (_j < $toTraverse.length) and (not $foundUnsolved); _j++>>
	  <<if $roomInfo[$toTraverse[_j]].solved == false >>
	    <<set $foundUnsolved = true>>
	  <<else>>
	    <<for _k = 0; _k < $roomInfo[$toTraverse[_j]].exits.length; _k++>>
		  <<set _this = $roomInfo[$toTraverse[_j]].exits[_k][0]>>
		  <<if not $traversed.includes(_this) and not $toTraverse.includes(_this)>>
		    <<run $toTraverse.push(_this)>>
	      <</if>>
	    <</for>>
	  <</if>>
	<</for>>
  <</for>>
  <<if $foundUnsolved or $hardmode>>
	  [[_my_array[1]|_my_array[0]]]
	<<else>>
	  <font color=green>(_my_array[2])</font>
  <</if>>
<</widget>>

<<widget "solvesearch">>
  <center>
  <<if def $roomInfo[_y]>>
    <<set _y=passage()>>
	<<set _anyroomyet=false>>
    <<for _a = 0; _a < $roomInfo[_y].exits.length; _a++>>
	  <<if $roomInfo[$roomInfo[_y].exits[_a][0]].available is false>>
      <<else>>
	    <<if _anyroomyet is true>>|
	      <<else>>
	      <<set _anyroomyet=true>>
	    <</if>>
        <<roomto _a>>
	  <</if>>
    <</for>>
  <<elseif _y == "Inventory" or _y == "UsePage">>
    [[As you were|$oldpsg]]
  <<else>>
  <font color=green>(likely dead end/death trap--just undo in the left column!)</font>
  <</if>>
  </center>
<</widget>>

<<widget "showitems">>
  <<set $any_items=false>>
  <<set _psg=passage()>>
  <<set $tempitms to Object.keys($itemInfo)>>
  <<for _a = 0; _a < $tempitms.length; _a++>>
    <<set _ti=$tempitms[_a]>>
    <<if $itemInfo[_ti].taken == false>>
	  <br />
      <<if $itemInfo[_ti].initroom == _psg>>
	    <<set _x=_ti>>
        <<print $itemInfo[_ti].description>> <<print _ti>>(<<link [[Take it|_psg]]>><<set $itemInfo[_x].taken=true>><<set $inventory.push(_x)>><</link>>)
      <hr />
	  <</if>>
	<</if>>
  <</for>>
<</widget>>

<<widget "showinventory">>
  <<if $inventory.length == 0>>You are carrying nothing.
  <<else>>
    <<for _i = 0; _i < $inventory.length; _i++>>
	  <<set $temp to $inventory[_i]>>
        $temp: <<link "USE THIS" "UsePage">><<set $useitem to $temp>><</link>><br />
	<</for>>
  <</if>>
<</widget>>

<<widget "usewidget">>
  <<print $useitem>> being used...
  <<if $itemInfo[$useitem].useroom == $oldpsg>>
  You used it right!
  <<set $roomInfo[$itemInfo[$useitem].useroom].solved to true>>
	<<set $thisroom=$itemInfo[$useitem].reveals>>
	<<for $temp = 0; $temp < $thisroom.length; $temp++>>
    <<if Object.keys($roomInfo).contains($thisroom[$temp])>>
	<<set $roomInfo[$thisroom[$temp]].available = true>>
	<<else>>No such room $thisroom[$temp]
	<</if>>
	<</for>>
  <<run $inventory.delete($useitem)>>
  <<else>>
  You used it wrong.
  <</if>>
<</widget>>

/% <<set $roomInfo[$itemInfo[$useitem].reveals[_b]].available = true>> %/

:: StoryMenu [StoryMenu]

<<set $hm to 'Hard mode, click for easy'>>
<<if $hardmode == false>><<set $hm to 'Easy mode, click for hard'>><</if>>

<<set _labels to ['Easy mode, click for hard', 'Hard mode, click for easy']>>
<<set _hm to _labels[Number($hardmode)]>>

<<link "<span id='dif'>_hm</span>">>
	<<set $hardmode to not $hardmode>>
    <<set _hm to _labels[Number($hardmode)]>>
	<<replace "#dif">>_hm<</replace>>
<</link>>

<<if passage()!="UsePage" and passage()!="Inventory">><<set $oldpsg=passage()>><</if>>

[[Inventory]]

::Inventory

<<showinventory>>

:: PassageFooter

<<showitems>>

<<solvesearch>>

:: PassageHeader

<center><<nobr>><font size=+2 color=yellow><<set _y=passage()>><<if def $roomInfo[_y] and def $roomInfo[_y].solvedname and $roomInfo[_y].solved is true>><<print $roomInfo[_y].solvedname>><<else>>_y<</if>></font><</nobr>></center>

:: UsePage

<<usewidget>>

:: Funny Mound

<<if $roomInfo["Funny Mound"].solved == false>>There's a funny mound here that seems to be covering passage elsewhere.<<else>>With money found here, passages expanded.<</if>>

A blob rind lies here! You may be able to figure out what it's doing, or it might do, so you'll know whether or not you want to [[inspect it|RobBlind]].

:: Wash Pit

:: Weedy Nerds

:: Feeling Diner

:: Small Isles

:: Ganging Hate

:: Rusty Fiddlers

:: Blighter's Rock

<<if $roomInfo["Blighter's Rock"].solved == false>><<link [[Solve this|Blighter's Rock]]>><<solvethis>><</link>><<else>>You solved this.<</if>>

:: RobBlind

Unsurprisingly, the blob rind swells up to several times its original side in order to, uh, rob you blind. It only enveloped your belongings, not you, but you're so embarrassed by the experience, you give up. Or, you know, you can undo.
