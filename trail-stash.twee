:: StoryTitle
Trail Stash

:: StoryData
{
  "ifid": "0570A44F-5C6D-4A2A-9482-40658C61E3A9",
  "format": "SugarCube",
  "format-version": "2.30.0",
  "start": "Ganging Hate"
}

:: Garbage / Backup Code

:: StoryInit

/% todo (for testing): condense SOLVETHIS if-statements (rm4-7) into a widget %/
/% Hizzy Bub is place, Bed Hangars too, Bay Hut %/

<<set $roomInfo to {}>>
<<set $itemInfo to {}>>
<<set $inventory to []>>
<<set $oldpsg to "">>
<<set $useitem to "">>

/% center rooms %/
<<set $roomInfo['Funny Mound'] to {
  exits: [ ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Veering Choice', 'to a Veering Choice', '(opened the veering choice)'], ['Harming Fights', 'to harming fights', '(fixed the harming fights)'], ['Weedy Nerds', 'to some weedy nerds', '(fixed the weedy nerds)'], ['Feeling Diner', 'to the feeling diner', '(fixed the Feeling Diner)'], ],
  available: true,
  solved: false,
  solvedname: 'Money Found'
  }
>>
<<set $roomInfo['Small Isles'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Veering Choice', 'to a Veering Choice', '(opened the veering choice)'], ['Drunk Shore', 'to a Drunk Shore', '(Drunk Shore solved)'], ['Wash Pit', 'to the Wash Pit', '(cleaned up the Wash Pit)'], ['Feast Lake', 'to a feast lake', '(made Feast Lake nicer)'] ],
  available: true,
  solved: false,
  solvedname: "All Smiles"
  }
>>
<<set $roomInfo['Ganging Hate'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Veering Choice', 'to a Veering Choice', '(opened the veering choice)'], ['Yacking Hard', 'to yacking hard', '(Yacking Hard resolved)'], ['Plaid Base', 'to Plaid Base', '(Plaid Base neutralized)'], ['Rusty Fiddlers', 'to rusty fiddlers', '(Rusty Fiddlers better occupied)'] ],
  available: true,
  solved: false,
  solvedname: "Hanging Gate"
  }
>>
<<set $roomInfo['Veering Choice'] to {
  exits: [ ['Funny Mound', 'to a funny mound', '(Funny Mound solved)'], ['Ganging Hate', 'near some ganging hate', '(Ganging Hate repelled)'], ['Small Isles', 'to some small isles', '(Small Isles solved)'], ['Peer Class', 'to a peer class', '(Peer Class solved)'], ['Blighters Rock', 'to Blighters Rock', '(Blighters Rock happified)'], ['Brainy Zoo', 'to a Brainy Zoo', '(Brainy Zoo fed)'] ],
  available: true,
  solved: false,
  solvedname: "Cheering Voice"
  }
>>

/% sector 1 %/
<<set $roomInfo['Harming Fights'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Posh Wit"
  }
>>
<<set $roomInfo['Weedy Nerds'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Needy Words"
  }
>>
<<set $roomInfo['Feeling Diner'] to {
  exits: [ ['Funny Mound', 'back to a funny mound', '(Funny Mound solved)'] ],
  available: false,
  solved: false,
  solvedname: "Dealing Finer"
  }
>>

/% sector 2 %/
<<set $roomInfo['Wash Pit'] to {
  exits: [ ['Small Isles', 'back to small isles', '(Small Isles solved)'] ],
  available: false,
  solved: false,
  solvedname: "Posh Wit"
  }
>>
<<set $roomInfo['Drunk Shore'] to {
  exits: [ ['Small Isles', 'back to small isles', '(Small Isles solved)'] ],
  available: false,
  solved: false,
  solvedname: "Shrunk Door"
  }
>>
<<set $roomInfo['Feast Lake'] to {
  exits: [ ['Small Isles', 'back to small isles', '(Small Isles solved)'] ],
  available: false,
  solved: false,
  solvedname: "Least Fake"
  }
>>

/% sector 3 %/

<<set $roomInfo['Peer Class'] to {
  exits: [ ['Veering Choice', 'back to veering choice', '(Veering Choice mowered through)'] ],
  available: false,
  solved: false,
  solvedname: "Posh Wit"
  }
>>
<<set $roomInfo['Blighters Rock'] to {
  exits: [ ['Veering Choice', 'back to veering choice', '(Veering Choice mowered through)'] ],
  available: false,
  solved: false,
  solvedname: "Shrunk Door"
  }
>>
<<set $roomInfo['Brainy Zoo'] to {
  exits: [ ['Veering Choice', 'back to veering choice', '(Veering Choice mowered through)'] ],
  available: false,
  solved: false,
  solvedname: "Least Fake"
  }
>>

/% sector 4 %/

<<set $roomInfo['Yacking Hard'] to {
  exits: [ ['Ganging Hate', 'back to hanging gate', '(Hanging Gate traversed)'] ],
  available: false,
  solved: false,
  solvedname: "Posh Wit"
  }
>>
<<set $roomInfo['Plaid Base'] to {
  exits: [ ['Ganging Hate', 'back to hanging gate', '(Hanging Gate traversed)'] ],
  available: false,
  solved: false,
  solvedname: "Shrunk Door"
  }
>>
<<set $roomInfo['Rusty Fiddlers'] to {
  exits: [ ['Ganging Hate', 'back to hanging gate', '(Hanging Gate traversed)'] ],
  available: false,
  solved: false,
  solvedname: "Least Fake"
  }
>>

/% first we take care of all the main area items %/

<<set $itemInfo['Pert Door'] to {
  initroom: 'Ganging Hate',
  useroom: 'Funny Mound',
  taken: false,
  used: false,
  description: "A pert door stands here on its own. Odd!",
  success: "You place the pert door down. Somehow, it sinks into the Funny Mound, lowering it. You now have passage through.",
  reveals: [ "Harming Fights", "Weedy Nerds", "Feeling Diner" ]
}
>>

<<set $itemInfo['Hair Shirt'] to {
  initroom: 'Funny Mound',
  useroom: 'Small Isles',
  taken: false,
  used: false,
  description: "A hair shirt lies here, disused and unloved. Odd!",
  success: "You share hurt in your hair shirt. People realize they are not alone. It makes everyone happy.",
  reveals: [ "Drunk Shore", "Wash Pit", "Feast Lake" ]
}
>>

<<set $itemInfo['Quick Pest'] to {
  initroom: 'Small Isles',
  useroom: 'Veering Choice',
  taken: false,
  used: false,
  description: "A quick pest bounces back and forth here. It must get exhausted soon, right?",
  success: "The quick pest is ready to go again. It zips back and forth, destroying some bulwarks and opening three new passages.",
  reveals: [ "Peer Class", "Blighters Rock", "Brainy Zoo" ]
}
>>

<<set $itemInfo['Hard Candy'] to {
  initroom: 'Veering Choice',
  useroom: 'Ganging Hate',
  taken: false,
  used: false,
  description: "Some hard candy is here, still in its wrapper.",
  success: "There's nothing like candy to dispel ganging hate! Even if it is not very good candy! As the ganging hate subsides, you notice other passages through.",
  reveals: [ "Yacking Hard", "Rusty Fiddlers", "Plaid Base" ]
}
>>

/% next we take care of all the back/cross-area items %/

/% from area 1 %/

<<set $itemInfo['Unpairable Buns'] to {
  initroom: 'Feeling Diner',
  useroom: 'Wash Pit',
  taken: false,
  used: false,
  description: "You see several Unpairable Buns here. I mean, they probably taste okay, but they'd just look weird making a hamburger or whatever.",
  success: "The Unpairable Buns are too low-class for the sort of jokes around here. The worst of the elitists flee, leaving behind a map piece, which you take.",
  reveals: [ ]
}
>> /% 1-2 %/

<<set $itemInfo['Funk Pail'] to {
  initroom: 'Harming Fights',
  useroom: 'Peer Class',
  taken: false,
  used: false,
  description: "A funk pail lies here, old and discarded, once useful for chores but no more.",
  success: "The funk pail reveals the poseurs who participate a lot in class but do not contribute anything! Faced with this truth they cannot but flee. The remaining members, glad to have the time-wasters weeded out, give you a map piece as thanks.",
  reveals: [ ]
}
>> /% 1-3 %/

<<set $itemInfo['Tech Chip'] to {
  initroom: 'Weedy Nerds',
  useroom: 'Yacking Hard',
  taken: false,
  used: false,
  description: "The Weedy Nerds have discarded a tech chip here.",
  success: "The tech chip seems to be just the thing to get the Yacking, Hard to change subject. The yackers in question know just what to do with it. They had been talking about doing technical stuff for a while, but nobody ever pushed them to do anything. This chip is just what they need! As thanks, they give you a piece of the treasure map.",
  reveals: [ ]
}
>> /% 1-4 %/

/% from area 2 %/

<<set $itemInfo['Spicy Prune'] to {
  initroom: 'Feast Lake',
  useroom: 'Feeling Diner',
  taken: false,
  used: false,
  description: "A spicy prune sits here untouched and not too dirty.",
  success: "The spicy prune causes an upheaval of the usually tacit and boring Feeling Diner. Conversation had gotten too whiny. The patrons plan on doing a bit more. They look around for a way to give thanks. They have it--a piece of the map you need!",
  reveals: [ ]
}
>> /% 2-1 %/

<<set $itemInfo['Snide Tracks'] to {
  initroom: 'Wash Pit',
  useroom: 'Brainy Zoo',
  taken: false,
  used: false,
  description: "Snide tracks lie here. You know, the music kind.",
  success: "You feed the snide tracks to the denizens of the Brainy Zoo. Surprisingly, they digest them and have quite a lot to wash the food down with. They sit and ponder things unimaginable to humans, giving you a piece of a treasure map in gratitude.",
  reveals: [ ]
}
>> /% 2-3 %/

<<set $itemInfo['Booze Cluster'] to {
  initroom: 'Drunk Shore',
  useroom: 'Rusty Fiddlers',
  taken: false,
  used: false,
  description: "A booze cluster lies here.",
  success: "The booze cluster seems to satisfy the rusty fiddlers. They discuss various things like how a raven is like a writing-desk, or how to fill a seven-gallon jug with a three- and five-gallon jug, and, indeed, what the general case is for when you can and can't do that, and how to do so in the optimum number of terms. Quite bluntly, you find it a bit boring, but they don't. They're so happy, in fact, they give you a map piece!",
  reveals: [ ]
}
>> /% 2-4 %/

/% from area 3 %/

<<set $itemInfo['Grease Pipe'] to {
  initroom: 'Blighters Rock',
  useroom: 'Harming Fights',
  taken: false,
  used: false,
  description: "A Grease Pipe lies here, probably part of some trash thoughtlessly dumped.",
  success: "You hand the Grease Pipes to each of the fighters. They are glad to have such strong looking weapons! They are so consumed with winning that you did not realize you gave one to their enemy. Nevertheless, when they try to actually wield the pipes, said pipes slip from their hands. They were already pretty tired of fighting, and after a while, they realize they just want peace, and they may just be destroying the land they are fighting over.",
  reveals: [ ]
}
>> /% 3-1 %/

<<set $itemInfo['Dummy Scoop'] to {
  initroom: 'Peer Class',
  useroom: 'Feast Lake',
  taken: false,
  used: false,
  description: "A dummy scoop lies here. Everyone seems to look down on it here, but it doesn't seem to be helping them much. All the (alleged) dummies, perhaps, have been scooped from such an advanced class.",
  success: "The dummy scoop leaves the feasters horrified at first, but then they realize -- here is something even faker than they are! Obviously they have work to do to be themselves, but perhaps they were further along than they thought. They hand you a map piece.",
  reveals: [ ]
}
>> /% 3-2 %/

<<set $itemInfo['Filed Wire'] to {
  initroom: 'Brainy Zoo',
  useroom: 'Plaid Base',
  taken: false,
  used: false,
  description: "Some filed wire lies here. It could be hazardous!",
  success: "The filed wire lands on the tackiest part of the plaid base, and the sun glints off it. It catches flame. The base is consumed, and as you sift through the ashes, you find a map piece.",
  reveals: [ ]
}
>> /% 3-4 %/

/% from area 4 %/

<<set $itemInfo['Wee Freights'] to {
  initroom: 'Yacking Hard',
  useroom: 'Weedy Nerds',
  taken: false,
  used: false,
  description: "Some Wee Freights lie here, a neat subject of conversation, but sadly these trains have no track or power of locomotion.",
  success: "The Weedy Nerds are quickly very interested in the Wee Freights. The process of moving and organizing said Freights gets longer. They analyze the structure of the Freights and build bigger ones. All this is a good workout--something the Weedy Nerds once avoided. Yet they seemed refreshed by it all. They are shocked to find exercise has cleared their mind and helped them focus on some goals and achieve others! A good bout of exercise also opens their minds to more subjective things, not just technical creations and such. They give you a piece of map for helping them realize this.",
  reveals: [ ]
}
>> /% 4-1 %/

<<set $itemInfo['Cheese on a cane'] to {
  initroom: 'Plaid Base',
  useroom: 'Drunk Shore',
  taken: false,
  used: false,
  description: "Some cheese on a cane has been discarded. Mmm, cheese.",
  success: "The Cheese on a Cane, being thick, gums up the Drunk Shore and dehydrates it enough to realize ... a shrunk door! You open it. There's a map piece in there.",
  reveals: [ ]
}
>> /% 4-2 %/

<<set $itemInfo['Picky Quill'] to {
  initroom: 'Rusty Fiddlers',
  useroom: 'Blighters Rock',
  taken: false,
  used: false,
  description: "A picky quill lies here. Whenever the rusty fiddlers get close, it jumps away. Who could be its rightful owner?",
  success: "The picky quill leaps from blighter to blighter, each of whom feels inspired. It's like a chemical charge, only with less withdrawal and addiction! They all feel more free to do, be, and report what they did and were. They offer you a piece of the map as thanks.",
  reveals: [ ]
}
>> /% 4-3 %/

<<set $hardmode=false>>

:: Story Widgets [widget nobr]
<<widget "thispassage">>
<<=passage()>>
<</widget>>

<<widget "solvethis">>
<<set $roomInfo[passage()].solved = true>>
<</widget>>

<<widget "roomto">>
  <<set _in=passage()>>
  <<set _my_array = $roomInfo[_in].exits[$args[0]]>>
  <<set _out = _my_array[0]>>
  <<set $traversed = [ _in ]>>
  <<set $toTraverse = [ _out ]>>
  <<set $canTraverse = true>>
  <<set $foundUnsolved = false>>
  <<for _i = 0; (_i < 25) and ($canTraverse) and (not $foundUnsolved) and (not $hardmode); _i++>>
    <<set $canTraverse = false>>
    <<for _j = 0; (_j < $toTraverse.length) and (not $foundUnsolved); _j++>>
	  <<if $roomInfo[$toTraverse[_j]].solved == false >>
	    <<set $foundUnsolved = true>>
	  <<else>>
	    <<for _k = 0; _k < $roomInfo[$toTraverse[_j]].exits.length; _k++>>
		  <<set _this = $roomInfo[$toTraverse[_j]].exits[_k][0]>>
		  <<if not $traversed.includes(_this) and not $toTraverse.includes(_this)>>
		    <<run $toTraverse.push(_this)>>
	      <</if>>
	    <</for>>
	  <</if>>
	<</for>>
  <</for>>
  <<if $foundUnsolved or $hardmode>>
	  [[_my_array[1]|_my_array[0]]]
	<<else>>
	  <font color=green>(_my_array[2])</font>
  <</if>>
<</widget>>

<<widget "solvesearch">>
  <center>
  <<if def $roomInfo[_y]>>
    <<set _y=passage()>>
	<<set _anyroomyet=false>>
    <<for _a = 0; _a < $roomInfo[_y].exits.length; _a++>>
	  <<print $roomInfo[$roomInfo[_y].exits[_a]]>>
	  <<if $roomInfo[$roomInfo[_y].exits[_a][0]].available is false>>
      <<else>>
	    <<if _anyroomyet is true>>|
	      <<else>>
	      <<set _anyroomyet=true>>
	    <</if>>
        <<roomto _a>>
	  <</if>>
    <</for>>
  <<elseif _y == "Inventory" or _y == "UsePage">>
    [[As you were|$oldpsg]]
  <<else>>
  <font color=green>(likely dead end/death trap--just undo in the left column!)</font>
  <</if>>
  </center>
<</widget>>

<<widget "showitems">>
  <<set $any_items=false>>
  <<set _psg=passage()>>
  <<set $tempitms to Object.keys($itemInfo)>>
  <<for _a = 0; _a < $tempitms.length; _a++>>
    <<set _ti=$tempitms[_a]>>
    <<if $itemInfo[_ti].taken == false>>
      <<if $itemInfo[_ti].initroom == _psg>>
	    <<set _x=_ti>>
        <br /><<print $itemInfo[_ti].description>> (<<link [[Take it|_psg]]>><<set $itemInfo[_x].taken=true>><<set $inventory.push(_x)>><</link>>)
	  <</if>>
	<</if>>
  <</for>>
<</widget>>

<<widget "usethis">>
  $args[0]: [[USE THIS|UsePage][$useitem to $args[0]]]<br />
<</widget>>

<<widget "showinventory">>
  <<if $inventory.length == 0>>You are carrying nothing.
  <<else>>
    <<for _i = 0; _i < $inventory.length; _i++>>
	  <<set $temp to $inventory[_i]>>
	    <<usethis $temp>>
	<</for>>
  <</if>>
<</widget>>

<<widget "usewidget">>
  <<print $useitem>> being used... (DELETE THIS)
  <<if $itemInfo[$useitem].useroom == $oldpsg>>
  <<print $itemInfo[$useitem].success>>
  <<set $roomInfo[$itemInfo[$useitem].useroom].solved to true>>
	<<set $thisroom=$itemInfo[$useitem].reveals>>
	<<for $temp = 0; $temp < $thisroom.length; $temp++>>
    <<if Object.keys($roomInfo).contains($thisroom[$temp])>>
	<<set $roomInfo[$thisroom[$temp]].available = true>>
	<<else>>No such room $thisroom[$temp]
	<</if>>
	<</for>>
  <<run $inventory.delete($useitem)>>
  <<else>>
  You used it wrong.
  <</if>>
<</widget>>

/% <<set $roomInfo[$itemInfo[$useitem].reveals[_b]].available = true>> %/

:: StoryMenu [StoryMenu]

<<set $hm to 'Hard mode, click for easy'>>
<<if $hardmode == false>><<set $hm to 'Easy mode, click for hard'>><</if>>

<<set _labels to ['Easy mode, click for hard', 'Hard mode, click for easy']>>
<<set _hm to _labels[Number($hardmode)]>>

<<link "<span id='dif'>_hm</span>">>
	<<set $hardmode to not $hardmode>>
    <<set _hm to _labels[Number($hardmode)]>>
	<<replace "#dif">>_hm<</replace>>
<</link>>

<<if passage()!="UsePage" and passage()!="Inventory">><<set $oldpsg=passage()>><</if>>

[[Inventory]]

::Inventory

<<showinventory>>

:: PassageFooter

<<showitems>>

<<solvesearch>>

:: PassageHeader

<center><<nobr>><font size=+2 color=yellow><<set _y=passage()>><<if def $roomInfo[_y] and def $roomInfo[_y].solvedname and $roomInfo[_y].solved is true>><<print $roomInfo[_y].solvedname>><<else>>_y<</if>></font><</nobr>></center>

:: UsePage

Use item = !!$useitem!!.

<<usewidget>>

:: Funny Mound

<<if $roomInfo["Funny Mound"].solved == false>>There's a funny mound here that seems to be covering passage elsewhere.<<else>>With money found here, passages expanded.<</if>>

A blob rind lies here! You may be able to figure out what it's doing, or it might do, so you'll know whether or not you want to [[inspect it|Rob Blind]].

:: Harming Fights

:: Weedy Nerds

:: Feeling Diner

:: Small Isles

:: Drunk Shore

:: Wash Pit

:: Feast Lake

:: Ganging Hate

:: Yacking Hard

:: Plaid Base

:: Rusty Fiddlers

:: Veering Choice

:: Blighters Rock

:: Brainy Zoo

:: Peer Class

:: Rob Blind

Oh, no! The blob rind swells up to several times its original side in order to, uh, rob you blind. It only enveloped your belongings, not you, but you're so embarrassed by the experience, you give up. Or, you know, you can undo.
